[{"C:\\Users\\78729\\Desktop\\qkl4\\dapp\\src\\index.js":"1","C:\\Users\\78729\\Desktop\\qkl4\\dapp\\src\\App.js":"2","C:\\Users\\78729\\Desktop\\qkl4\\dapp\\src\\Navbar.js":"3","C:\\Users\\78729\\Desktop\\qkl4\\dapp\\src\\utils\\initWeb3.js":"4","C:\\Users\\78729\\Desktop\\qkl4\\dapp\\src\\eth\\fundingCompanyInstance.js":"5","C:\\Users\\78729\\Desktop\\qkl4\\dapp\\src\\display\\DappCenter.js":"6","C:\\Users\\78729\\Desktop\\qkl4\\dapp\\src\\display\\InvestFunding.js":"7","C:\\Users\\78729\\Desktop\\qkl4\\dapp\\src\\display\\AllFunding.js":"8","C:\\Users\\78729\\Desktop\\qkl4\\dapp\\src\\display\\CreatorFunding.js":"9","C:\\Users\\78729\\Desktop\\qkl4\\dapp\\src\\display\\CardList.js":"10","C:\\Users\\78729\\Desktop\\qkl4\\dapp\\src\\eth\\interact.js":"11","C:\\Users\\78729\\Desktop\\qkl4\\dapp\\src\\display\\Request.js":"12","C:\\Users\\78729\\Desktop\\qkl4\\dapp\\src\\display\\CreateNewFunding.js":"13"},{"size":240,"mtime":1610539931000,"results":"14","hashOfConfig":"15"},{"size":964,"mtime":1610892198183,"results":"16","hashOfConfig":"15"},{"size":386,"mtime":1610539931000,"results":"17","hashOfConfig":"15"},{"size":306,"mtime":1610539931000,"results":"18","hashOfConfig":"15"},{"size":7994,"mtime":1610895078796,"results":"19","hashOfConfig":"15"},{"size":584,"mtime":1610891159332,"results":"20","hashOfConfig":"15"},{"size":2566,"mtime":1610539931000,"results":"21","hashOfConfig":"15"},{"size":2683,"mtime":1610539931000,"results":"22","hashOfConfig":"15"},{"size":4965,"mtime":1610894195822,"results":"23","hashOfConfig":"15"},{"size":2315,"mtime":1610893540977,"results":"24","hashOfConfig":"15"},{"size":6161,"mtime":1610539931000,"results":"25","hashOfConfig":"15"},{"size":2435,"mtime":1610539931000,"results":"26","hashOfConfig":"15"},{"size":3353,"mtime":1610539931000,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"4xyoik",{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},"C:\\Users\\78729\\Desktop\\qkl4\\dapp\\src\\index.js",[],["62","63"],"C:\\Users\\78729\\Desktop\\qkl4\\dapp\\src\\App.js",["64","65","66"],"import React, {Component} from 'react';\nimport web3 from './utils/initWeb3';\nimport {fundingCompanyInstance} from './eth/fundingCompanyInstance';\nimport DappCenter from './display/DappCenter';\nimport Navbar from './Navbar.js';\nimport { Card, Image, List, Progress } from 'semantic-ui-react';\n\nclass App extends Component{\n  constructor(){\n    super()\n    this.state = {\n      currentAccount:'',\n    }\n  }\n  \n  async componentWillMount(){\n    let accounts = await web3.eth.getAccounts()\n    console.log('account:',accounts)\n    \n    let platformManager = await fundingCompanyInstance.methods.platformManager().call()\n    console.log('Manager:',platformManager)\n    this.setState({currentAccount:accounts[0]})\n  }\n\n  render(){\n      return (\n          <div>\n              <Navbar account={this.state.currentAccount} />\n              <Image src='/images/up.jpg' wrapped ui={false} height=\"200\" />\n        <DappCenter/>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","C:\\Users\\78729\\Desktop\\qkl4\\dapp\\src\\Navbar.js",[],"C:\\Users\\78729\\Desktop\\qkl4\\dapp\\src\\utils\\initWeb3.js",[],"C:\\Users\\78729\\Desktop\\qkl4\\dapp\\src\\eth\\fundingCompanyInstance.js",[],"C:\\Users\\78729\\Desktop\\qkl4\\dapp\\src\\display\\DappCenter.js",[],"C:\\Users\\78729\\Desktop\\qkl4\\dapp\\src\\display\\InvestFunding.js",[],"C:\\Users\\78729\\Desktop\\qkl4\\dapp\\src\\display\\AllFunding.js",["67"],"//所有众筹项目页面\nimport React , {Component } from 'react';\nimport { getFundingDetails, handleInvestFunc } from '../eth/interact';\nimport CardList from './CardList';\nimport { Dimmer , Form , Label , Loader , Segment } from 'semantic-ui-react';\n\nclass AllFunding extends Component{\n    state = {\n        active : false,\n        allFundingDetails : [],\n        selectedFundingDetail : '',\n    }\n\n    async componentWillMount(){\n        let allFundingDetails = await getFundingDetails(1)\n        console.table(allFundingDetails)\n\n        this.setState({\n            allFundingDetails,\n        })\n    }\n\n    //返回一个回调函数给CardList\n    onCardClick = (selectedFundingDetail) => {\n        console.log('aaaaa : ',selectedFundingDetail)\n        this.setState({\n            selectedFundingDetail:selectedFundingDetail\n        })\n    }\n\n    handleInvest = async() => {\n        this.setState({active:true})\n        let{fundingAddress, investBalance} = this.state.selectedFundingDetail\n        //send a clicked contract address\n        try{\n            await handleInvestFunc(fundingAddress, investBalance)\n            alert('参与众筹项目成功\\n')\n            this.setState({active:false})\n        }catch(error){\n            console.log(error)\n            this.setState({active:false})\n        }\n    }\n\n    render(){\n        let {fundingAddress, projectName, investBalance} = this.state.selectedFundingDetail\n        return(\n            <div>\n                <h3>所有的众筹项目</h3>\n                <CardList details={this.state.allFundingDetails} onCardClick={this.onCardClick}/>\n                <div>\n                    <h1></h1>\n                    <Dimmer.Dimmable as = {Segment} dimmed={this.state.active}>\n                        <Dimmer active={this.state.active} inverted>\n                            <Loader>参与众筹</Loader>\n                        </Dimmer>\n                        <Form onSubmit={this.handleInvest}>\n                            <Form.Input type = 'text' value={projectName || ''} label='项目名称 : '/>\n                            <Form.Input type = 'text' value={fundingAddress || ''} label='项目地址 : '/>\n                            <Form.Input type = 'text' value={investBalance || ''} label='固定投资金额 : ' labelPosition='left'>\n                                <Label basic>￥</Label>\n                                <input />\n                            </Form.Input>\n                            <Form.Button primary content = '参与众筹' />\n                        </Form>\n                    </Dimmer.Dimmable>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default AllFunding","C:\\Users\\78729\\Desktop\\qkl4\\dapp\\src\\display\\CreatorFunding.js",["68","69"],"//发起人页面\nimport React, {Component} from 'react';\nimport {getFundingDetails,createRequest,showRequests,finalizeRequest} from '../eth/interact';\nimport CardList from './CardList';\nimport CreateNewFunding from './CreateNewFunding';\nimport {Form,Label,Segment,Button} from 'semantic-ui-react';\nimport Request from './Request';\n\nclass CreatorFunding extends Component{\n    state = {\n        creatorFundingDetails : [],\n        selectedFundingDetail: '',\n        requestDesc: '', //description\n        requestBalance: '',\n        requestAddress: '',\n        requestsDetails: [],\n    }\n\n    async componentWillMount() {\n        let creatorFundingDetails = await getFundingDetails(2)\n        console.table(creatorFundingDetails)\n\n        this.setState({\n            creatorFundingDetails,\n        })\n    }\n\n    //CardList function \n    onCardClick = (selectedFundingDetail) => {\n        console.log('bbbbb',selectedFundingDetail)\n        this.setState({\n            selectedFundingDetail:selectedFundingDetail\n        })\n    }\n\n    //data changed then activate function\n    handleChange = (e, {name,value}) => this.setState({ [name]:value })\n    handleCreateRequest = async() => {\n        let {selectedFundingDetail,requestDesc,requestBalance,requestAddress} = this.state\n        console.log(requestDesc,requestBalance,requestAddress)\n        try{\n            await createRequest(selectedFundingDetail.fundingAddress,requestDesc,requestBalance,requestAddress)\n            alert('申请请求成功\\n')\n        }catch(error){\n            console.log(error)\n        }\n    }\n    handleShowRequests = async () =>{\n        let fundingAddress = this.state.selectedFundingDetail.fundingAddress\n        try{\n            let requestsDetails = await showRequests(fundingAddress)\n            console.log('requestsDetails:',requestsDetails)\n            this.setState({\n                requestsDetails:requestsDetails\n            })\n        }catch(err){\n            console.log(err)\n        }\n    }\n    handleFinalize = async (index) => {\n        console.log('终结请求',index)\n        try{\n            await finalizeRequest(this.state.selectedFundingDetail.fundingAddress,index)\n            alert('支付成功\\n')\n        }catch(error){\n            console.log(error)\n        }\n    }\n\n    render(){\n        let{ creatorFundingDetails,selectedFundingDetail,requestDesc,requestBalance,requestAddress,requestsDetails } = this.state\n        return(\n            <div>\n                <CardList details={creatorFundingDetails} onCardClick={this.onCardClick} />\n                <h4></h4>\n                <CreateNewFunding />\n                {\n                    <div>\n                        <h1></h1>\n                        <h3>发起支付请求</h3>\n                        <Segment>\n                            <h4>当前众筹项目 : {selectedFundingDetail.projectName}</h4>\n                            <h4>地址 : {selectedFundingDetail.fundingAddress}</h4>\n                            <Form onSubmit={this.handleCreateRequest}>\n                                <Form.Input type='text' name='requestDesc' required value={requestDesc}\n                                    label='请求描述' placeholder='请求描述' onChange={this.handleChange} />\n\n                                <Form.Input type='text' name='requestBalance' required value={requestBalance}\n                                    label='支付金额' labelPosition='left' placeholder='支付金额' onChange={this.handleChange}>\n                                    <Label basic>￥</Label>\n                                    <input />\n                                </Form.Input>\n\n                                <Form.Input type='text' name='requestAddress' required value={requestAddress}\n                                    label='商家收款地址' labelPosition='left' placeholder='商家收款地址' onChange={this.handleChange}>\n                                    <Label basic><span role='img' aria-label='location'>📍</span></Label>\n                                    <input />\n                                </Form.Input>\n                                <Form.Button primary content='申请请求' />\n\n                            </Form>\n                        </Segment>\n                    </div>\n                }\n\n                {\n                    selectedFundingDetail && (\n                        <div>\n                            <Button onClick={this.handleShowRequests}>申请详情</Button>\n                            <Request \n                                requestsDetails = {requestsDetails}\n                                handleFinalize = {this.handleFinalize}\n                                pageKey={2}\n                                investorsCount = {selectedFundingDetail.investorsCount}\n                            />\n                        </div>\n                    )\n                }\n            </div>\n        )\n\n    }\n\n}\nexport default CreatorFunding","C:\\Users\\78729\\Desktop\\qkl4\\dapp\\src\\display\\CardList.js",["70","71","72","73","74"],"//显示项目的图\nimport React from 'react';\nimport { Card , Image , List , Progress } from 'semantic-ui-react';\n\nconst src = '/public/images/whiteframe.png'\n\nconst CardList = (props) => {\n    let details = props.details\n    let onCardClick = props.onCardClick\n\n    let cards = details.map(detail => {\n        return <CardFunding key = {detail.fundingAddress} detail={detail} onCardClick={onCardClick}/>\n\n    })\n\n    return (\n        <Card.Group itemsPerRow={4}>\n            {cards}\n        </Card.Group>\n    )\n\n}\n\nconst CardFunding = (props) => {\n    let detail = props.detail\n    let {fundingAddress,manager,projectName,investBalance,targetBalance,projectDescrip,deadline,balance,investorsCount} = detail\n    let percent = parseFloat(balance) / parseFloat(targetBalance) * 100\n    \n    let onCardClick = props.onCardClick\n\n    return(\n        <Card onClick={() => {\n            return onCardClick && onCardClick(detail)\n        }}>\n            <Image src = '/images/ethereum.jpg' wrapped ui={false}/>\n            <Card.Content>\n                <Card.Header>{projectName}</Card.Header>\n                <Card.Meta>\n                    <span className='date'>截止时间 ：{deadline} </span>\n                </Card.Meta>\n                <Card.Description>概述：{projectDescrip}</Card.Description>\n            </Card.Content>\n            <Card.Content extra>\n                <List horizontal style={{display:'flex', justifyContent:'space-around'}}>\n                    <List.Item>\n                        <List.Content>\n                            <List.Header>已筹得</List.Header>\n                            {balance}wei\n                        </List.Content>\n                    </List.Item>\n                    <List.Item>\n                        <List.Content>\n                            <List.Header>已达</List.Header>\n                            {percent}%\n                        </List.Content>\n                    </List.Item>\n                    <List.Item>\n                        <List.Content>\n                            <List.Header>已参与人数</List.Header>\n                            {investorsCount}人\n                        </List.Content>\n                    </List.Item>\n                </List>\n            </Card.Content>\n        </Card>\n    )\n\n}\n\nexport default CardList\n","C:\\Users\\78729\\Desktop\\qkl4\\dapp\\src\\eth\\interact.js",[],"C:\\Users\\78729\\Desktop\\qkl4\\dapp\\src\\display\\Request.js",["75"],"import React from 'react';\nimport { Table ,Button } from 'semantic-ui-react';\n\nconst Request = (props) => {\n    let {requestsDetails,handleApprove,pageKey,handleFinalize,investorsCount} = props\n\n    //rows of requests\n    let rowContainer = requestsDetails.map((requestsDetails,i) => {\n        return <RowInfo \n            key = {i}\n            requestsDetail={requestsDetails}\n            handleApprove = {handleApprove}\n            index = {i}\n            pageKey = {pageKey}\n            handleFinalize = {handleFinalize}\n            investorsCount = {investorsCount}\n            />\n    })\n\n    return(\n        <Table celled>\n            <Table.Header>\n                <Table.Row>\n                    <Table.HeaderCell>请求描述</Table.HeaderCell>\n                    <Table.HeaderCell>支付金额</Table.HeaderCell>\n                    <Table.HeaderCell>商家地址</Table.HeaderCell>\n                    <Table.HeaderCell>当前同意人数</Table.HeaderCell>\n                    <Table.HeaderCell>当前状态</Table.HeaderCell>\n                    <Table.HeaderCell>操作</Table.HeaderCell>\n                </Table.Row>\n            </Table.Header>\n            <Table.Body>\n                {\n                    rowContainer\n                }\n            </Table.Body>\n        </Table>\n    )\n}\n\nlet RowInfo = (props) => {\n    let {requestsDetail,handleApprove,index,pageKey,handleFinalize,investorsCount} = props\n    //struct of Request\n    let{0:purpose,1:cost,2:shopAddress,3:isVoted,4:voteCount,5:status} = requestsDetail\n    let statusInfo = ''\n\n    if(status === '0'){\n        statusInfo = 'Voting'\n    }else if(status === '1'){\n        statusInfo = 'Approved'\n    }else if(status === '2'){\n        statusInfo = 'Completed'\n    }\n    return (\n        <Table.Row>\n            <Table.Cell>{purpose}</Table.Cell>\n            <Table.Cell>{cost}</Table.Cell>\n            <Table.Cell>{shopAddress}</Table.Cell>\n            <Table.Cell>{voteCount}/{investorsCount}</Table.Cell>\n            <Table.Cell>{statusInfo}</Table.Cell>\n            <Table.Cell>\n                {\n                    (pageKey === 2) ? (\n                        <Button onClick={() => handleFinalize(index)}>支付</Button>\n                    ) : (\n                        <Button onClick={() => handleApprove(index)}>批准</Button>\n                    )\n                }\n            </Table.Cell>\n        </Table.Row>\n    )\n}\n\nexport default Request","C:\\Users\\78729\\Desktop\\qkl4\\dapp\\src\\display\\CreateNewFunding.js",["76"],"//创建众筹项目页面\nimport React,{Component} from 'react';\nimport {Dimmer,Form,Label,Loader,Segment} from 'semantic-ui-react';\nimport {createFunding} from '../eth/interact';\n\nclass CreateNewFunding extends Component{\n    state = {\n        active : false,\n        projectName: '',\n        investMoney: '',\n        targetMoney: '',\n        projectDescrip: '',\n        duration: '',\n    }\n    //when data changed then touch below function\n    handleChange = (e,{name,value}) => this.setState({[name]:value})\n\n    handleCreate = async() => {\n        let{projectName,investMoney,targetMoney,projectDescrip,duration} = this.state\n        console.log('investMoney:',investMoney)\n        console.log('targetMoney:',targetMoney)\n        this.setState({active:true})\n\n        try{\n            await createFunding(projectName,investMoney,targetMoney,projectDescrip,duration)\n            alert('创建新的众筹项目成功\\n')\n            this.setState({active:false})\n\n        }catch(error){\n            this.setState({active:false})\n            console.log(error)\n        }\n    }\n\n    render(){\n        let {active,projectName,investMoney,targetMoney,projectDescrip,duration} = this.state\n\n        return(\n            <div>\n                <h4></h4>\n                <Dimmer.Dimmable as={Segment} dimmed={active}>\n                    <Dimmer active={active} inverted>\n                        <Loader>Loading...</Loader>\n                    </Dimmer>\n                    <Form onSubmit={this.handleCreate}>\n                        <Form.Input required type = 'text' placeholder='项目名称' name='projectName'\n                                value={projectName} label='项目名称 :' onChange={this.handleChange}/>\n                        \n                        <Form.Input required type = 'text' placeholder='投资金额' name='investMoney'\n                                value={investMoney} label='固定投资金额 :' labelPosition='left' onChange={this.handleChange}>\n                            <Label basic>￥</Label>\n                            <input/>\n                        </Form.Input>\n\n                        <Form.Input required type = 'text' placeholder='目标金额' name='targetMoney'\n                                value={targetMoney} label='目标金额 :' labelPosition='left' onChange={this.handleChange}>\n                            <Label basic>￥</Label>\n                            <input/>\n                        </Form.Input>\n\n                        <Form.Input required type = 'text' placeholder='项目概述' name='projectDescrip'\n                                value={projectDescrip} label='项目概述 :' labelPosition='left' onChange={this.handleChange}>\n                            \n                        </Form.Input>\n\n                        <Form.Input required type = 'text' placeholder='请输入秒数 eg : 10000' name='duration'\n                                value={duration} label='众筹所需时间（秒） :' labelPosition='left' onChange={this.handleChange}>\n                            <Label basic>￥</Label>\n                            <input/>\n                        </Form.Input>\n                        <Form.Button primary content='创建'/> \n\n                    </Form>\n                </Dimmer.Dimmable>\n            </div>\n        )\n    }\n\n}\n\nexport default CreateNewFunding",["77","78"],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":6,"column":10,"nodeType":"85","messageId":"86","endLine":6,"endColumn":14},{"ruleId":"83","severity":1,"message":"87","line":6,"column":23,"nodeType":"85","messageId":"86","endLine":6,"endColumn":27},{"ruleId":"83","severity":1,"message":"88","line":6,"column":29,"nodeType":"85","messageId":"86","endLine":6,"endColumn":37},{"ruleId":"89","severity":1,"message":"90","line":52,"column":21,"nodeType":"91","endLine":52,"endColumn":25},{"ruleId":"89","severity":1,"message":"90","line":75,"column":17,"nodeType":"91","endLine":75,"endColumn":21},{"ruleId":"89","severity":1,"message":"90","line":79,"column":25,"nodeType":"91","endLine":79,"endColumn":29},{"ruleId":"83","severity":1,"message":"88","line":3,"column":32,"nodeType":"85","messageId":"86","endLine":3,"endColumn":40},{"ruleId":"83","severity":1,"message":"92","line":5,"column":7,"nodeType":"85","messageId":"86","endLine":5,"endColumn":10},{"ruleId":"83","severity":1,"message":"93","line":26,"column":10,"nodeType":"85","messageId":"86","endLine":26,"endColumn":24},{"ruleId":"83","severity":1,"message":"94","line":26,"column":25,"nodeType":"85","messageId":"86","endLine":26,"endColumn":32},{"ruleId":"83","severity":1,"message":"95","line":26,"column":45,"nodeType":"85","messageId":"86","endLine":26,"endColumn":58},{"ruleId":"83","severity":1,"message":"96","line":44,"column":42,"nodeType":"85","messageId":"86","endLine":44,"endColumn":49},{"ruleId":"89","severity":1,"message":"90","line":40,"column":17,"nodeType":"91","endLine":40,"endColumn":21},{"ruleId":"79","replacedBy":"97"},{"ruleId":"81","replacedBy":"98"},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","'List' is defined but never used.","'Progress' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'src' is assigned a value but never used.","'fundingAddress' is assigned a value but never used.","'manager' is assigned a value but never used.","'investBalance' is assigned a value but never used.","'isVoted' is assigned a value but never used.",["99"],["100"],"no-global-assign","no-unsafe-negation"]