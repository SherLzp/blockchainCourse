[{"C:\\Users\\lin45\\donate\\src\\index.js":"1","C:\\Users\\lin45\\donate\\src\\reportWebVitals.js":"2","C:\\Users\\lin45\\donate\\src\\App.js":"3","C:\\Users\\lin45\\donate\\src\\eth\\donate.js":"4","C:\\Users\\lin45\\donate\\src\\utils\\InitWeb3.js":"5","C:\\Users\\lin45\\donate\\src\\display\\Mainpage.js":"6","C:\\Users\\lin45\\donate\\src\\display\\Slider.js":"7","C:\\Users\\lin45\\donate\\src\\display\\CreateProject.js":"8","C:\\Users\\lin45\\donate\\src\\display\\CreateUse.js":"9","C:\\Users\\lin45\\donate\\src\\display\\ProjectList.js":"10","C:\\Users\\lin45\\donate\\src\\display\\ShowDetails.js":"11"},{"size":544,"mtime":1610699204040,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":7943,"mtime":1610801001561,"results":"15","hashOfConfig":"13"},{"size":8795,"mtime":1610802303807,"results":"16","hashOfConfig":"13"},{"size":284,"mtime":1610628684653,"results":"17","hashOfConfig":"13"},{"size":2701,"mtime":1610793233312,"results":"18","hashOfConfig":"13"},{"size":2528,"mtime":1610699752153,"results":"19","hashOfConfig":"13"},{"size":1615,"mtime":1610798203730,"results":"20","hashOfConfig":"13"},{"size":1299,"mtime":1610800426419,"results":"21","hashOfConfig":"13"},{"size":7054,"mtime":1610800699772,"results":"22","hashOfConfig":"13"},{"size":4620,"mtime":1610804386148,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1vfq5pc",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\lin45\\donate\\src\\index.js",[],["50","51"],"C:\\Users\\lin45\\donate\\src\\reportWebVitals.js",[],"C:\\Users\\lin45\\donate\\src\\App.js",["52","53","54"],"import logo from './logo.svg';\nimport './App.css';\n  \nimport React, { Component } from 'react';\nimport Mainpage from './display/Mainpage'\nimport {Button,message} from 'antd'\nlet web3 = require('./utils/InitWeb3');\nlet donateInstance = require('./eth/donate')\n\n\nclass App extends React.Component {\n  constructor(props){\n      super(props);\n      this.createProject = this.createProject.bind(this);\n      this.invest = this.invest.bind(this);\n      this.createUse = this.createUse.bind(this);\n      this.vote = this.vote.bind(this);\n      this.getData = this.getData.bind(this);\n      //this.returnMoney = this.returnMoney.bind(this);\n      this.state = {\n          currentAccount: '游客',\n          allData: [],\n          isClicked: false\n      }\n  }\n\n  componentDidMount() {\n  }\n\n  async getData(){\n    try{\n      let accounts = await web3.eth.getAccounts();\n      let totalProject = await donateInstance.methods.getTotalNum().call();\n      let allData = [];\n      \n      for(let i=1; i<=totalProject; i++){\n          let key = i-1;\n          let id = i;\n         // let address = await donateInstance.methods.getAddress().call();\n         \n         let summary = await donateInstance.methods.getsummary(i).call();\n          let owner = await donateInstance.methods.getowner(i).call();\n          let end_time = await donateInstance.methods.getend_time(i).call();\n          let start_time = await donateInstance.methods.getstart_time(i).call();\n          let money_neededWei = await donateInstance.methods.getmoney_needed(i).call();\n          let money_needed = web3.utils.fromWei(money_neededWei, 'ether');\n          let money_raisedeWei = await donateInstance.methods.getmoney_raised(i).call();\n          let money_raised = web3.utils.fromWei(money_raisedeWei, 'ether');\n          let money_availableWei = await donateInstance.methods.getmoney_available(i).call();\n          let money_available = web3.utils.fromWei(money_availableWei, 'ether');\n          let info = await donateInstance.methods.getInfo(i).call();\n          let myMoneyWei = await donateInstance.methods.getFunderMoney(i, accounts[0]).call();\n          let myMoney = web3.utils.fromWei(myMoneyWei, 'ether');\n         \n          \n          let allUses = []\n          let useNum = await donateInstance.methods.getUseNum(i).call();\n          for(let j=1; j<=useNum; j++){\n              let info = await donateInstance.methods.getUseInfo(i, j).call();\n              let uesMoneyWei = await donateInstance.methods.getUseMoney(i, j).call();\n              let uesMoney = web3.utils.fromWei(uesMoneyWei, 'ether');\n              let useAgreeNumWei = await donateInstance.methods.getUseAgree(i, j).call();\n              let useAgreeNum = web3.utils.fromWei(useAgreeNumWei, 'ether');\n              let useDisagreeNumWei = await donateInstance.methods.getUseDisagree(i, j).call();\n              let useDisagreeNum = web3.utils.fromWei(useDisagreeNumWei, 'ether');\n              //let result = await donateInstance.methods.checkResult(i,j).call();\n             // let isVote = await donateInstance.methods.getUseVote(i, j, accounts[0]).call();\n              allUses.push({\n                  id: j,\n                  info: info,\n                  uesMoney: uesMoney,\n                  useAgreeNum: useAgreeNum,\n                  useDisagreeNum: useDisagreeNum,\n                 // result: result,\n              })\n          }\n          //\n          allData.push({\n              key: key,\n              id: id,\n              //address: address,\n              summary: summary,\n              owner: owner,\n              end_time: end_time,\n              start_time:start_time,\n              money_needed: money_needed,\n              money_raised: money_raised,\n              money_available: money_available,\n              info: info,\n              myMoney: myMoney,\n              allUses: allUses\n          })\n          \n      }\n      \n      this.setState({\n        currentAccount: accounts[0],\n          allData: allData,\n          isClicked: false\n      })\n    } catch(e){\n          message.error(\"众筹项目信息加载出错！\");\n    }\n  }\n\n  helpFunction = () => {\n      window.ethereum.on('accountsChanged', (accounts) => {\n          if (accounts[0] !== this.state.currentAccount) {\n              this.getData();\n          }\n      })\n  }\n\n  async componentWillMount() {\n      await this.getData();\n      this.helpFunction()\n  }\n\n  /*async returnMoney(id){\n      const currentAccount = this.state.currentAccount;\n      this.setState({isClicked:true})\n      try{\n          await donateInstance.methods.returnMoney(id).send({\n              from: currentAccount,\n              gas: '3000000',\n          })\n          window.location.reload();\n          this.setState({isClicked:false})\n          message.success(\"退钱成功！\");\n      } catch(e){\n          this.setState({isClicked:false})\n          message.error(\"退钱失败！\");\n      }\n  }*/\n\n  async createProject(summary, info,start_time,end_time, money_needed){\n      const currentAccount = this.state.currentAccount;\n      let money_neededWei = web3.utils.toWei(money_needed.toString(), 'ether');\n      this.setState({isClicked:true})\n      try{\n          await donateInstance.methods.createProject(summary,info,start_time,end_time, money_neededWei,currentAccount).send({\n              from: currentAccount,\n              gas: '3000000',\n          });\n          window.location.reload();\n          this.setState({isClicked:false})\n          message.success(\"新众筹项目创建成功！\");\n      } catch(e){\n          this.setState({isClicked:false})\n          message.error(\"新众筹项目创建失败！\");\n      }\n  }\n\n  async invest(id, money){\n      const currentAccount = this.state.currentAccount;\n      let moneyWei=web3.utils.toWei(money.toString(), 'ether');\n      this.setState({isClicked:true})\n      try{\n          await donateInstance.methods.invest(id,moneyWei,currentAccount).send({\n              from: currentAccount,\n              gas: '3000000'\n          })\n          window.location.reload();\n          this.setState({isClicked:false})\n          message.success(\"投资成功！\");\n      } catch(e){\n          this.setState({isClicked:false})\n          message.error(\"投资失败！\");\n      }\n  }\n\n  async createUse(id, money,info){\n      const currentAccount = this.state.currentAccount;\n      const moneyWei = web3.utils.toWei(money.toString(), 'ether');\n      this.setState({isClicked:true})\n      try{\n          \n          await donateInstance.methods.createUse(id,moneyWei,info).send({\n              from: currentAccount,\n              gas: '3000000'\n          })\n          window.location.reload();\n          this.setState({isClicked:false})\n          message.success(\"使用请求创建成功！\");\n      } catch(e){\n          this.setState({isClicked:false})\n          message.error(\"使用请求创建失败！\");\n      }\n  }\n\n  async vote(i, useId, fid, isAgree){\n      const currentAccount = this.state.currentAccount;\n      this.setState({isClicked:true})\n      try{\n          await donateInstance.methods.vote(i, useId,currentAccount,isAgree).send({\n              from: currentAccount,\n              gas: '3000000'\n          })\n          window.location.reload();\n          this.setState({isClicked:false})\n          message.success(\"投票成功！\");\n      } catch(e){\n          this.setState({isClicked:false})\n          message.error(\"投票失败！\");\n      }\n  }\n\n  render(){\n      //this.helpFunction()\n      return(\n        <div>\n          <Mainpage \n            currentAccount = {this.state.currentAccount}\n            allData = {this.state.allData}\n            createProject = {this.createProject}\n            invest = {this.invest}\n            createUse = {this.createUse}\n            vote = {this.vote}\n            //returnMoney = {this.returnMoney}\n            isClicked = {this.state.isClicked}\n          />        \n        </div>\n      );\n  }\n\n}\n\nexport default App;\n","C:\\Users\\lin45\\donate\\src\\eth\\donate.js",[],"C:\\Users\\lin45\\donate\\src\\utils\\InitWeb3.js",[],"C:\\Users\\lin45\\donate\\src\\display\\Mainpage.js",["55","56","57","58","59"],"import React from \"react\";\r\nimport { Menu, Layout,Select,Radio} from 'antd';\r\nimport Slider from \"./Slider\";\r\nimport {NotEndProject,MyInvestingProject,MyCreatingProject,ProjectList,AllProject} from './ProjectList';\r\n\r\nconst {Footer, Sider} = Layout;\r\nconst { Option } = Select;\r\n\r\nexport default class Mainpage extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {choicebutton:'0'};\r\n    }\r\n    render(){\r\n      \r\n        let currentAccount = this.props.currentAccount;\r\n        let proj_component, page;\r\n        let choicebutton = this.state.choicebutton;\r\n        if(choicebutton === '0'){\r\n          proj_component = <AllProject {...this.props}/>\r\n        }\r\n        else if(choicebutton === '1'){\r\n          proj_component = <NotEndProject {...this.props}/>\r\n        }\r\n        else if(choicebutton === '2'){\r\n          proj_component = <MyCreatingProject {...this.props}/>\r\n        }\r\n        else{\r\n          proj_component = <MyInvestingProject {...this.props}/>\r\n        }\r\n        page = \r\n        <Layout style={{marginLeft: '32px', marginTop: '30px'}}>\r\n          \r\n          <h2 style={{color:\"dark-grey\",textAlign:'center'}}>我的众筹网站</h2>\r\n          <h3 style={{textAlign:'center'}}>您好，{currentAccount}</h3>\r\n          <br></br>\r\n          <br></br>\r\n          {proj_component}\r\n          \r\n        </Layout>\r\n\r\n        \r\n        \r\n        return(\r\n          <Layout>\r\n\t\t\t      <Layout style={{minHeight: '100vh'}}>\r\n              <Sider>\r\n                <Menu\r\n                    mode=\"inline\" \r\n                    theme=\"dark\"\r\n                    defaultSelectedKeys={['0']}\r\n                    style={{ height: '100%', borderRight: 0 }}\r\n                >\r\n                  \r\n                  <Menu.Item key={'0'} style={{textAlign:'center'}} onClick={()=>{this.setState({choicebutton:'0'})}}>\r\n                    全部众筹项目\r\n                  </Menu.Item>\r\n                  <Menu.Item key={\"2\"} style={{textAlign:'center'}} onClick={()=>{this.setState({choicebutton:'2'})}}>\r\n                    我创建的项目\r\n                  </Menu.Item>\r\n                  <Menu.Item key={\"3\"} style={{textAlign:'center'}}  onClick={()=>{this.setState({choicebutton:'3'})}}>\r\n                    我投资的项目\r\n                  </Menu.Item>\r\n                  <Menu.Item key={'1'} style={{textAlign:'center'}} onClick={()=>{this.setState({choicebutton:'1'})}}>\r\n                    未完成的项目\r\n                  </Menu.Item>\r\n                  \r\n                </Menu>\r\n              </Sider>\r\n              {page}\r\n            </Layout>\r\n            \r\n          </Layout>\r\n        )\r\n    }\r\n} \r\n\r\n","C:\\Users\\lin45\\donate\\src\\display\\Slider.js",[],"C:\\Users\\lin45\\donate\\src\\display\\CreateProject.js",[],"C:\\Users\\lin45\\donate\\src\\display\\CreateUse.js",[],"C:\\Users\\lin45\\donate\\src\\display\\ProjectList.js",["60","61","62","63"],"import React from \"react\";\r\nimport { Layout, Drawer,Button, Space, Table, Modal, Spin, Popconfirm, Tag} from 'antd';\r\nimport ShowDetails from \"./ShowDetails\";\r\nimport CreateUse from \"./CreateUse\";\r\nimport CreateProject from \"./CreateProject\";\r\n\r\nexport default class ProjectList extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          isCreateFundingVisible: false, \r\n          isShowDetailsVisible: false, \r\n          isCreateUseVisible: false,\r\n          curId: 0, \r\n          detail:''\r\n        }\r\n    }\r\n    \r\n\r\n    ShowMoreDetails = (index)=>{\r\n      this.setState({\r\n        curId: index,\r\n        detail: this.props.allData[index],\r\n        isShowDetailsVisible: true,\r\n      })\r\n    }\r\n\r\n    addNewUse = (index)=>{\r\n      this.setState({\r\n        curId: index,\r\n        detail: this.props.allData[index],\r\n        isCreateUseVisible: true\r\n      })\r\n    }\r\n\r\n\r\n    render(){\r\n        const columns = [{\r\n            title: '项目内容',\r\n            dataIndex: 'summary',\r\n            key: 'summary',\r\n            width: '12%'\r\n        },{\r\n            title: '需要筹集金额(ETH)',\r\n            dataIndex: 'money_needed',\r\n            key: 'money_needed',\r\n            width: '18%'\r\n        },{\r\n            title: '已筹集金额(ETH)',\r\n            dataIndex: 'money_raised',\r\n            key: 'money_raised',\r\n            width: '18%'\r\n        },{\r\n            title: '项目状态',\r\n            key: 'state',\r\n            width: '12%',\r\n            render: (text, record)=>{\r\n              if(record.money_raised === record.money_needed){\r\n                return <p >成功</p>;\r\n              }\r\n              else if(record.end_time*1000 < (new Date()).getTime()){\r\n                return <p >失败</p>;\r\n              }\r\n              else{\r\n                return <p >进行中</p>;\r\n              }\r\n            }\r\n        },{\r\n            title: '开始时间',\r\n            dataIndex: 'start_time',\r\n            key: 'start_time',\r\n            width: '15%',\r\n            render: start_time => (\r\n              <p>{(new Date(start_time * 1000)).toLocaleDateString()}</p>\r\n            )\r\n        },{\r\n            title: '结束时间',\r\n            dataIndex: 'end_time',\r\n            key: 'deadline',\r\n            width: '15%',\r\n            render: end_time => (\r\n              <p>{(new Date(end_time * 1000)).toLocaleDateString()}</p>\r\n            )\r\n        },{\r\n            title: '操作',\r\n            key: 'detail',\r\n            render: (text, record)=>{\r\n              if(this.props.tableType === 3){\r\n                const isSuccess = (this.props.allData[record.key].money_needed === this.props.allData[record.key].money_raised);\r\n                return(\r\n                  <Space>\r\n                    <Button type=\"primary\" onClick={()=>this.addNewUse(record.key)} \r\n                      disabled={this.props.isClicked || !isSuccess}>\r\n                      新增使用请求\r\n                    </Button>\r\n                  </Space>\r\n                )\r\n              }\r\n              \r\n              else{\r\n                return(\r\n                  <Button type=\"primary\" onClick={()=>this.ShowMoreDetails(record.key)} disabled={this.props.isClicked}>\r\n                    查看详情\r\n                  </Button>\r\n                )\r\n              }\r\n            }\r\n        }]\r\n        return(\r\n          <Layout>\r\n            <Button type=\"primary\" style={{ marginTop: 10, marginLeft: 20,marginBottom:20, width: '14%', height: '42px' }} onClick={() => this.setState({isCreateFundingVisible: true})} disabled={this.props.isClicked}>新建众筹项目</Button>\r\n            <Spin spinning={this.props.isClicked} size=\"large\">\r\n              <Drawer\r\n                title=\"新建众筹项目\"\r\n                placement=\"right\"\r\n                closable={false}\r\n                visible={this.state.isCreateFundingVisible}\r\n                footer={null}\r\n                width={'50%'}\r\n                onClose={() => {this.setState({isCreateFundingVisible:false})}}\r\n              >\r\n                <CreateProject \r\n                  onClick={this.props.createProject}\r\n                  isClicked = {this.props.isClicked}\r\n                />\r\n              </Drawer>\r\n              <Drawer\r\n                title=\"新增使用请求\"\r\n                placement=\"right\"\r\n                closable={false}\r\n                width={'35%'}\r\n                visible={this.state.isCreateUseVisible}\r\n                footer={null}\r\n                onClose={() => {this.setState({isCreateUseVisible:false})}}\r\n              >\r\n                <CreateUse \r\n                  {...this.state.detail}\r\n                  createUse = {this.props.createUse}\r\n                  currentAccount  = {this.props.currentAccount}\r\n                  isClicked = {this.props.isClicked}\r\n                />\r\n              </Drawer>\r\n              <Drawer\r\n                title=\"查看详情信息\"\r\n                placement=\"right\"\r\n                closable={false}\r\n                width={'50%'}\r\n                visible={this.state.isShowDetailsVisible}\r\n                footer={null}\r\n                width=\"800px\"\r\n                onClose={() => {this.setState({isShowDetailsVisible: false})}}\r\n              >\r\n                <ShowDetails \r\n                  {...this.state.detail}\r\n                  invest = {this.props.invest}\r\n                  vote = {this.props.vote}\r\n                  currentAccount = {this.props.currentAccount}\r\n                  isClicked = {this.props.isClicked}\r\n                />\r\n              </Drawer>\r\n            </Spin>\r\n            <Table columns={columns} dataSource={this.props.showData} pagination={{pageSize: 10}} style={{marginRight:'50px'}}/>\r\n            </Layout>\r\n        )\r\n    }\r\n}  \r\nexport class NotEndProject extends React.Component {\r\n  render(){\r\n    const allData = this.props.allData; \r\n    const data = allData.filter(item => {\r\n      console.log(item.money_raised-item.money_needed<0);\r\n      return((item.money_raised-item.money_needed<0 && item.end_time*1000>(new Date()).getTime()));\r\n    })\r\n    return(\r\n      <ProjectList {...this.props} showData={data} tableType={2}/>\r\n    )\r\n  }\r\n} \r\nexport class MyInvestingProject extends React.Component {\r\n  render(){\r\n    const allData = this.props.allData; \r\n    const data = allData.filter(item => parseInt(item.myMoney) > 0);\r\n    return(\r\n      <ProjectList {...this.props} showData={data} tableType={4}/>\r\n    )\r\n  }\r\n} \r\nexport class MyCreatingProject extends React.Component {\r\n  render(){\r\n    const allData = this.props.allData; \r\n    const currentAccount = this.props.currentAccount;\r\n    const data = allData.filter(item => item.owner===currentAccount);\r\n    return(\r\n      <ProjectList {...this.props} showData={data} tableType={3}/>\r\n\r\n    )\r\n  }\r\n} \r\nexport  class AllProject extends React.Component {\r\n  render(){\r\n    const allData = this.props.allData; \r\n    return(\r\n      <ProjectList {...this.props} showData={allData} tableType={1}/>\r\n    )\r\n  }\r\n}","C:\\Users\\lin45\\donate\\src\\display\\ShowDetails.js",["64","65"],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":1,"column":8,"nodeType":"72","messageId":"73","endLine":1,"endColumn":12},{"ruleId":"70","severity":1,"message":"74","line":4,"column":17,"nodeType":"72","messageId":"73","endLine":4,"endColumn":26},{"ruleId":"70","severity":1,"message":"75","line":6,"column":9,"nodeType":"72","messageId":"73","endLine":6,"endColumn":15},{"ruleId":"70","severity":1,"message":"76","line":2,"column":30,"nodeType":"72","messageId":"73","endLine":2,"endColumn":35},{"ruleId":"70","severity":1,"message":"77","line":3,"column":8,"nodeType":"72","messageId":"73","endLine":3,"endColumn":14},{"ruleId":"70","severity":1,"message":"78","line":4,"column":60,"nodeType":"72","messageId":"73","endLine":4,"endColumn":71},{"ruleId":"70","severity":1,"message":"79","line":6,"column":8,"nodeType":"72","messageId":"73","endLine":6,"endColumn":14},{"ruleId":"70","severity":1,"message":"80","line":7,"column":9,"nodeType":"72","messageId":"73","endLine":7,"endColumn":15},{"ruleId":"70","severity":1,"message":"81","line":2,"column":47,"nodeType":"72","messageId":"73","endLine":2,"endColumn":52},{"ruleId":"70","severity":1,"message":"82","line":2,"column":60,"nodeType":"72","messageId":"73","endLine":2,"endColumn":70},{"ruleId":"70","severity":1,"message":"83","line":2,"column":72,"nodeType":"72","messageId":"73","endLine":2,"endColumn":75},{"ruleId":"84","severity":1,"message":"85","line":150,"column":17,"nodeType":"86","endLine":150,"endColumn":30},{"ruleId":"70","severity":1,"message":"87","line":2,"column":10,"nodeType":"72","messageId":"73","endLine":2,"endColumn":16},{"ruleId":"70","severity":1,"message":"83","line":2,"column":51,"nodeType":"72","messageId":"73","endLine":2,"endColumn":54},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'Button' is defined but never used.","'Radio' is defined but never used.","'Slider' is defined but never used.","'ProjectList' is defined but never used.","'Footer' is assigned a value but never used.","'Option' is assigned a value but never used.","'Modal' is defined but never used.","'Popconfirm' is defined but never used.","'Tag' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Layout' is defined but never used.","no-global-assign","no-unsafe-negation"]