[{"C:\\Users\\Eternal\\Downloads\\2021\\Block Chain区块链\\chengshizhuo\\finalWork\\fundApp\\crowdfund\\src\\App.js":"1","C:\\Users\\Eternal\\Downloads\\2021\\Block Chain区块链\\chengshizhuo\\finalWork\\fundApp\\crowdfund\\src\\utils\\myUI.js":"2","C:\\Users\\Eternal\\Downloads\\2021\\Block Chain区块链\\chengshizhuo\\finalWork\\fundApp\\crowdfund\\src\\utils\\InitWeb3.js":"3","C:\\Users\\Eternal\\Downloads\\2021\\Block Chain区块链\\chengshizhuo\\finalWork\\fundApp\\crowdfund\\src\\index.js":"4","C:\\Users\\Eternal\\Downloads\\2021\\Block Chain区块链\\chengshizhuo\\finalWork\\fundApp\\crowdfund\\src\\reportWebVitals.js":"5","C:\\Users\\Eternal\\blockchainCourse\\chengshizhuo\\finalWork\\crowdfund\\src\\utils\\myUI.js":"6","C:\\Users\\Eternal\\blockchainCourse\\chengshizhuo\\finalWork\\crowdfund\\src\\utils\\InitWeb3.js":"7","C:\\Users\\Eternal\\blockchainCourse\\chengshizhuo\\finalWork\\crowdfund\\src\\App.js":"8","C:\\Users\\Eternal\\blockchainCourse\\chengshizhuo\\finalWork\\crowdfund\\src\\reportWebVitals.js":"9"},{"size":6787,"mtime":1610612666315,"results":"10","hashOfConfig":"11"},{"size":8701,"mtime":1610614840455,"results":"12","hashOfConfig":"11"},{"size":284,"mtime":1610585398095,"results":"13","hashOfConfig":"11"},{"size":500,"mtime":1610366025068,"results":"14","hashOfConfig":"11"},{"size":362,"mtime":1610366025068,"results":"15","hashOfConfig":"11"},{"size":8706,"mtime":1610629279990,"results":"16","hashOfConfig":"17"},{"size":284,"mtime":1610585398095,"results":"18","hashOfConfig":"17"},{"size":6940,"mtime":1610626776283,"results":"19","hashOfConfig":"17"},{"size":362,"mtime":1610366025068,"results":"20","hashOfConfig":"17"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"18bhnsq",{"filePath":"23","messages":"24","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},"twtbgr",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Eternal\\Downloads\\2021\\Block Chain区块链\\chengshizhuo\\finalWork\\fundApp\\crowdfund\\src\\App.js",["40"],"C:\\Users\\Eternal\\Downloads\\2021\\Block Chain区块链\\chengshizhuo\\finalWork\\fundApp\\crowdfund\\src\\utils\\myUI.js",["41","42","43","44","45","46","47"],"C:\\Users\\Eternal\\Downloads\\2021\\Block Chain区块链\\chengshizhuo\\finalWork\\fundApp\\crowdfund\\src\\utils\\InitWeb3.js",[],"C:\\Users\\Eternal\\Downloads\\2021\\Block Chain区块链\\chengshizhuo\\finalWork\\fundApp\\crowdfund\\src\\index.js",[],"C:\\Users\\Eternal\\Downloads\\2021\\Block Chain区块链\\chengshizhuo\\finalWork\\fundApp\\crowdfund\\src\\reportWebVitals.js",[],"C:\\Users\\Eternal\\blockchainCourse\\chengshizhuo\\finalWork\\crowdfund\\src\\utils\\myUI.js",["48","49","50","51","52","53","54"],"import React, { Component } from 'react'\r\nimport { Button, Card, Table, Form } from 'semantic-ui-react'\r\n\r\n\r\nconst GetListV = (props)=>{\r\n    var addr = props.address\r\n    var vstate = props.votestate\r\n    var vtar = props.voteneed\r\n    var vstr = props.voteproposal\r\n    var idx = []\r\n    addr.map((item,index)=>{\r\n        if(vstate[index]>=0 ){\r\n            idx.push(index)\r\n        }\r\n    })\r\n    console.log(props)\r\n    console.log(\"osofjosf\")\r\n    const myItem = idx.map((item,index)=>{\r\n        let tmp =(vstate[item]==0 && vtar[item] == 0)?'Not Start':(vstate[item]==1)?'Succeed':(vstate[item]==2)?'Fail':'Going on '\r\n        return(\r\n            <Table.Row>\r\n                <Table.Cell>\r\n                    {addr[item]}\r\n                </Table.Cell>\r\n                <Table.Cell>\r\n                    {vtar[item]}\r\n                </Table.Cell>\r\n                <Table.Cell>\r\n                    {vstr[item]}\r\n                </Table.Cell>\r\n                <Table.Cell>\r\n                    {tmp}\r\n                </Table.Cell>\r\n            </Table.Row>\r\n        )\r\n    })\r\n    return(\r\n        <Table celled striped>\r\n            <Table.Header>\r\n                <Table.Row>\r\n                    <Table.HeaderCell>address</Table.HeaderCell>\r\n                    <Table.HeaderCell>need</Table.HeaderCell>\r\n                    <Table.HeaderCell>details</Table.HeaderCell>\r\n                    <Table.HeaderCell>status</Table.HeaderCell>\r\n                </Table.Row>\r\n            </Table.Header>\r\n            <Table.Body>\r\n                {myItem}\r\n            </Table.Body>\r\n        </Table>        \r\n    )\r\n}\r\n\r\n\r\n\r\nconst GetList1 = (props)=>{\r\n    console.log(\"in GetList1\")\r\n    var addr = props.address\r\n    var tar = props.goallist\r\n    var got = props.gotlist\r\n    const myItem = addr.map((item,index)=>{\r\n        return(\r\n            <Table.Row>\r\n                <Table.Cell>\r\n                    {addr[index]}\r\n                </Table.Cell>\r\n                <Table.Cell>\r\n                    {tar[index]}\r\n                </Table.Cell>\r\n                <Table.Cell>\r\n                    {got[index]}\r\n                </Table.Cell>\r\n            </Table.Row>\r\n        )\r\n    })\r\n    console.log(\"out\")\r\n    return(\r\n        <Table celled striped>\r\n            <Table.Header>\r\n                <Table.Row>\r\n                    <Table.HeaderCell>address</Table.HeaderCell>\r\n                    <Table.HeaderCell>goal</Table.HeaderCell>\r\n                    <Table.HeaderCell>got</Table.HeaderCell>\r\n                </Table.Row>\r\n            </Table.Header>\r\n            <Table.Body>\r\n                {myItem}\r\n            </Table.Body>\r\n        </Table>\r\n    )\r\n}\r\n\r\nconst GetList2 = (props)=>{\r\n    console.log(\"in GetList2\")\r\n    var addr = props.address\r\n    var str = props.strlist\r\n    var tar = props.goallist\r\n    var got = props.gotlist\r\n    var ddl = props.timelist\r\n    console.log(\"wtfffffffff\")\r\n    console.log(addr)\r\n    console.log(tar)\r\n    console.log(got)\r\n    const myItem = addr.map((item,index)=>{\r\n        return(\r\n            <Table.Row>\r\n                <Table.Cell>{str[index]}</Table.Cell>\r\n                <Table.Cell>{addr[index]}</Table.Cell>\r\n                <Table.Cell>{tar[index]}</Table.Cell>\r\n                <Table.Cell>{got[index]}</Table.Cell>\r\n                <Table.Cell>{ddl[index]}</Table.Cell>\r\n            </Table.Row>\r\n        )\r\n    })\r\n    console.log(\"out\")\r\n    return(\r\n        <Table celled striped>\r\n            <Table.Header>\r\n                <Table.Row>\r\n                    <Table.HeaderCell>details</Table.HeaderCell>\r\n                    <Table.HeaderCell>address</Table.HeaderCell>\r\n                    <Table.HeaderCell>goal</Table.HeaderCell>\r\n                    <Table.HeaderCell>got</Table.HeaderCell>\r\n                    <Table.HeaderCell>ddl</Table.HeaderCell>\r\n                </Table.Row>\r\n            </Table.Header>\r\n            <Table.Body>\r\n                {myItem}\r\n            </Table.Body>\r\n        </Table>\r\n    )\r\n}\r\n\r\nconst GetListByidx = (props) =>{\r\n    var idx = props.index\r\n    var addr = []\r\n    var tar = []\r\n    var got = []\r\n    for(let i in idx){\r\n        let x = idx[i]\r\n        addr.push(props.address[x])\r\n        tar.push(props.goallist[x])\r\n        got.push(props.gotlist[x])\r\n    }\r\n    return <GetList1 address={addr} goallist={tar} gotlist={got}/>\r\n}\r\n\r\nclass GlobalTable extends Component{\r\n    constructor(){\r\n        super()\r\n        // console.log(\"GLobal\")\r\n        // console.log(this.props)\r\n    }\r\n    render(){\r\n        return(\r\n            <Form>\r\n                <Form.Field>\r\n                    <h3>Funding Board</h3>\r\n                    <Card.Meta>\r\n                        <p style={{ wordBreak: 'break-word' }}>Total: {this.props.totalcount}</p>\r\n                        <GetList2 \r\n                            strlist={this.props.strlist} \r\n                            address={this.props.fundlist} \r\n                            goallist={this.props.goallist} \r\n                            gotlist={this.props.gotlist}\r\n                            timelist={this.props.timelist}\r\n                        />\r\n                    </Card.Meta>\r\n                    <Card.Meta>\r\n                        <h3>Proposal Board</h3>\r\n                        <GetListV\r\n                            address={this.props.fundlist}\r\n                            votestate={this.props.votestate}\r\n                            voteneed={this.props.voteneed}\r\n                            voteproposal={this.props.voteproposal}\r\n                        />\r\n                    </Card.Meta>\r\n                </Form.Field>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\nclass PersonalTable extends Component{\r\n    constructor(){\r\n        super()\r\n    }\r\n    render(){\r\n        console.log(\"PPPPPPP\")\r\n        console.log(this.props)\r\n        return(\r\n    <Form>\r\n        <h1 className=\"ui centered\">Account</h1>\r\n        <p>Address：{this.props.myaddress}</p>\r\n        <Form.Field>\r\n            <label>Started</label>\r\n            <GetListByidx index={this.props.StartIndex} address={this.props.fundlist} goallist={this.props.goallist} gotlist={this.props.gotlist}/>\r\n        </Form.Field>\r\n        <Form.Field>\r\n            <label>Invested</label>\r\n            <GetListByidx index={this.props.InvestIndex} address={this.props.fundlist} goallist={this.props.goallist} gotlist={this.props.gotlist}/>\r\n        </Form.Field>\r\n        <Form.Field>\r\n            <label>Start a new funding</label>\r\n            <input ref='rp_name' placeholder='name'>\r\n            </input>\r\n            <input ref='rp_reason' placeholder='reason'>\r\n            </input>\r\n            <input ref='rp_value' placeholder='ether'>\r\n            </input>\r\n            <input ref='rp_ddl' placeholder='time/s'>\r\n            </input>\r\n            <Button animated='fade' onClick={()=>{this.props.newFunding(this.refs.rp_name.value,this.refs.rp_reason.value,this.refs.rp_ddl.value, this.refs.rp_value.value)}}>\r\n                <Button.Content>Start</Button.Content>\r\n            </Button>\r\n        </Form.Field>\r\n        <Form.Field>\r\n            <label>Start a new proposal</label>\r\n            <input ref='rv_addr' placeholder='project address'>\r\n            </input>\r\n            <input ref='rv_reason' placeholder='reason'>\r\n            </input>\r\n            <input ref='rv_value' placeholder='ether'>\r\n            </input>\r\n            <Button animated='fade' onClick={()=>{this.props.newProposal(this.refs.rv_addr.value, this.refs.rv_reason.value, this.refs.rv_value.value)}}>\r\n                <Button.Content>Start a new proposal</Button.Content>\r\n            </Button>\r\n        </Form.Field>\r\n        <Form.Field>\r\n            <label>Donate</label>\r\n            <input ref='pay_addr' placeholder='project address'>\r\n            </input>\r\n            <input ref='pay_value' placeholder='ether'>\r\n            </input>\r\n            <Button animated='fade' onClick={()=>{this.props.donate(this.refs.pay_addr.value, this.refs.pay_value.value)}}>\r\n                <Button.Content>donate</Button.Content>\r\n            </Button>\r\n        </Form.Field>\r\n        <Form.Field>\r\n            <label>Vote</label>\r\n            <input ref='vote_addr' placeholder='project address'>\r\n            </input>\r\n            <Button animated='fade' onClick={()=>{this.props.vote(this.refs.vote_addr.value,1)}}>\r\n                <Button.Content>Approve</Button.Content>\r\n            </Button>\r\n            <Button animated='fade' onClick={()=>{this.props.vote(this.refs.vote_addr.value,2)}}>\r\n                <Button.Content>Reject</Button.Content>\r\n            </Button>\r\n        </Form.Field>\r\n    </Form>\r\n)}\r\n}\r\n\r\nexport {GlobalTable, PersonalTable}","C:\\Users\\Eternal\\blockchainCourse\\chengshizhuo\\finalWork\\crowdfund\\src\\utils\\InitWeb3.js",[],"C:\\Users\\Eternal\\blockchainCourse\\chengshizhuo\\finalWork\\crowdfund\\src\\App.js",["55"],"C:\\Users\\Eternal\\blockchainCourse\\chengshizhuo\\finalWork\\crowdfund\\src\\reportWebVitals.js",[],{"ruleId":"56","severity":1,"message":"57","line":1,"column":29,"nodeType":"58","messageId":"59","endLine":1,"endColumn":37},{"ruleId":"60","severity":1,"message":"61","line":11,"column":26,"nodeType":"62","messageId":"63","endLine":11,"endColumn":28},{"ruleId":"64","severity":1,"message":"65","line":19,"column":31,"nodeType":"66","messageId":"67","endLine":19,"endColumn":33},{"ruleId":"64","severity":1,"message":"65","line":19,"column":49,"nodeType":"66","messageId":"67","endLine":19,"endColumn":51},{"ruleId":"64","severity":1,"message":"65","line":19,"column":80,"nodeType":"66","messageId":"67","endLine":19,"endColumn":82},{"ruleId":"64","severity":1,"message":"65","line":19,"column":108,"nodeType":"66","messageId":"67","endLine":19,"endColumn":110},{"ruleId":"68","severity":1,"message":"69","line":149,"column":5,"nodeType":"70","messageId":"71","endLine":153,"endColumn":6},{"ruleId":"68","severity":1,"message":"69","line":184,"column":5,"nodeType":"70","messageId":"71","endLine":186,"endColumn":6},{"ruleId":"60","severity":1,"message":"61","line":11,"column":26,"nodeType":"62","messageId":"63","endLine":11,"endColumn":28},{"ruleId":"64","severity":1,"message":"65","line":19,"column":31,"nodeType":"66","messageId":"67","endLine":19,"endColumn":33},{"ruleId":"64","severity":1,"message":"65","line":19,"column":49,"nodeType":"66","messageId":"67","endLine":19,"endColumn":51},{"ruleId":"64","severity":1,"message":"65","line":19,"column":80,"nodeType":"66","messageId":"67","endLine":19,"endColumn":82},{"ruleId":"64","severity":1,"message":"65","line":19,"column":108,"nodeType":"66","messageId":"67","endLine":19,"endColumn":110},{"ruleId":"68","severity":1,"message":"69","line":149,"column":5,"nodeType":"70","messageId":"71","endLine":153,"endColumn":6},{"ruleId":"68","severity":1,"message":"69","line":184,"column":5,"nodeType":"70","messageId":"71","endLine":186,"endColumn":6},{"ruleId":"56","severity":1,"message":"57","line":1,"column":29,"nodeType":"58","messageId":"59","endLine":1,"endColumn":37},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor"]