[{"D:\\DOC\\区块链与数字货币\\workfinal\\work\\src\\reportWebVitals.js":"1","D:\\DOC\\区块链与数字货币\\workfinal\\work\\src\\App.js":"2","D:\\DOC\\区块链与数字货币\\workfinal\\work\\src\\utils\\InitWeb3.js":"3","D:\\DOC\\区块链与数字货币\\workfinal\\work\\src\\index.js":"4","D:\\DOC\\区块链与数字货币\\workfinal\\work\\src\\utils\\myUI.js":"5"},{"size":362,"mtime":1609123596829,"results":"6","hashOfConfig":"7"},{"size":6618,"mtime":1610370010856,"results":"8","hashOfConfig":"7"},{"size":284,"mtime":1610105785676,"results":"9","hashOfConfig":"7"},{"size":500,"mtime":1609123596829,"results":"10","hashOfConfig":"7"},{"size":8467,"mtime":1610366956273,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"nuahzn",{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"D:\\DOC\\区块链与数字货币\\workfinal\\work\\src\\reportWebVitals.js",[],"D:\\DOC\\区块链与数字货币\\workfinal\\work\\src\\App.js",["23"],"D:\\DOC\\区块链与数字货币\\workfinal\\work\\src\\utils\\InitWeb3.js",[],"D:\\DOC\\区块链与数字货币\\workfinal\\work\\src\\index.js",[],"D:\\DOC\\区块链与数字货币\\workfinal\\work\\src\\utils\\myUI.js",["24","25","26","27","28","29","30","31","32"],"import React, { Component } from 'react'\r\nimport { Button, Card, Table, Form, Icon, Image, Statistic } from 'semantic-ui-react'\r\n\r\n\r\nconst GetListV = (props)=>{\r\n    var addr = props.address\r\n    var vstate = props.votestate\r\n    var vtar = props.votetar\r\n    var vstr = props.votestr\r\n    var idx = []\r\n    addr.map((item,index)=>{\r\n        if(vstate[index]>0){\r\n            idx.push(index)\r\n        }\r\n    })\r\n    const myItem = idx.map((item,index)=>{\r\n        let tmp =(vstate[item]==1)?'进行中':(vstate[item]==2)?'失败':(vstate[item]==3)?'成功':'未开始'\r\n        return(\r\n            <Table.Row>\r\n                <Table.Cell>\r\n                    {addr[item]}\r\n                </Table.Cell>\r\n                <Table.Cell>\r\n                    {vtar[item]}\r\n                </Table.Cell>\r\n                <Table.Cell>\r\n                    {vstr[item]}\r\n                </Table.Cell>\r\n                <Table.Cell>\r\n                    {tmp}\r\n                </Table.Cell>\r\n            </Table.Row>\r\n        )\r\n    })\r\n    return(\r\n        <Table celled striped>\r\n            <Table.Header>\r\n                <Table.Row>\r\n                    <Table.HeaderCell>地址</Table.HeaderCell>\r\n                    <Table.HeaderCell>目标</Table.HeaderCell>\r\n                    <Table.HeaderCell>描述</Table.HeaderCell>\r\n                    <Table.HeaderCell>状态</Table.HeaderCell>\r\n                </Table.Row>\r\n            </Table.Header>\r\n            <Table.Body>\r\n                {myItem}\r\n            </Table.Body>\r\n        </Table>        \r\n    )\r\n}\r\n\r\n\r\n\r\nconst GetList1 = (props)=>{\r\n    console.log(\"in GetList1\")\r\n    var addr = props.address\r\n    var tar = props.goallist\r\n    var got = props.gotlist\r\n    const myItem = addr.map((item,index)=>{\r\n        return(\r\n            <Table.Row>\r\n                <Table.Cell>\r\n                    {addr[index]}\r\n                </Table.Cell>\r\n                <Table.Cell>\r\n                    {tar[index]}\r\n                </Table.Cell>\r\n                <Table.Cell>\r\n                    {got[index]}\r\n                </Table.Cell>\r\n            </Table.Row>\r\n        )\r\n    })\r\n    console.log(\"out\")\r\n    return(\r\n        <Table celled striped>\r\n            <Table.Header>\r\n                <Table.Row>\r\n                    <Table.HeaderCell>地址</Table.HeaderCell>\r\n                    <Table.HeaderCell>目标</Table.HeaderCell>\r\n                    <Table.HeaderCell>已有</Table.HeaderCell>\r\n                </Table.Row>\r\n            </Table.Header>\r\n            <Table.Body>\r\n                {myItem}\r\n            </Table.Body>\r\n        </Table>\r\n    )\r\n}\r\n\r\nconst GetList2 = (props)=>{\r\n    console.log(\"in GetList2\")\r\n    var addr = props.address\r\n    var str = props.strlist\r\n    var tar = props.goallist\r\n    var got = props.gotlist\r\n    var ddl = props.timelist\r\n    console.log(addr)\r\n    console.log(tar)\r\n    console.log(got)\r\n    const myItem = addr.map((item,index)=>{\r\n        return(\r\n            <Table.Row>\r\n                <Table.Cell>{str[index]}</Table.Cell>\r\n                <Table.Cell>{addr[index]}</Table.Cell>\r\n                <Table.Cell>{tar[index]}</Table.Cell>\r\n                <Table.Cell>{got[index]}</Table.Cell>\r\n                <Table.Cell>{ddl[index]}</Table.Cell>\r\n            </Table.Row>\r\n        )\r\n    })\r\n    console.log(\"out\")\r\n    return(\r\n        <Table celled striped>\r\n            <Table.Header>\r\n                <Table.Row>\r\n                    <Table.HeaderCell>描述</Table.HeaderCell>\r\n                    <Table.HeaderCell>地址</Table.HeaderCell>\r\n                    <Table.HeaderCell>目标金额</Table.HeaderCell>\r\n                    <Table.HeaderCell>已有</Table.HeaderCell>\r\n                    <Table.HeaderCell>截止时间</Table.HeaderCell>\r\n                </Table.Row>\r\n            </Table.Header>\r\n            <Table.Body>\r\n                {myItem}\r\n            </Table.Body>\r\n        </Table>\r\n    )\r\n}\r\n\r\nconst GetListByidx = (props) =>{\r\n    var idx = props.index\r\n    var addr = []\r\n    var tar = []\r\n    var got = []\r\n    for(let i in idx){\r\n        let x = idx[i]\r\n        addr.push(props.address[x])\r\n        tar.push(props.goallist[x])\r\n        got.push(props.gotlist[x])\r\n    }\r\n    return <GetList1 address={addr} goallist={tar} gotlist={got}/>\r\n}\r\n\r\nclass GlobalTable extends Component{\r\n    constructor(){\r\n        super()\r\n        // console.log(\"GLobal\")\r\n        // console.log(this.props)\r\n    }\r\n    render(){\r\n        return(\r\n            <Form>\r\n                <Form.Field>\r\n                    Global Project List\r\n                    <Card.Meta>\r\n                        <p style={{ wordBreak: 'break-word' }}>总项目数: {this.props.totalcount}</p>\r\n                        <GetList2 \r\n                            strlist={this.props.strlist} \r\n                            address={this.props.prolist} \r\n                            goallist={this.props.goallist} \r\n                            gotlist={this.props.gotlist}\r\n                            timelist={this.props.timelist}\r\n                        />\r\n                    </Card.Meta>\r\n                    <Card.Meta>\r\n                        <h3>正在进行资金使用投票的项目：</h3>\r\n                        <GetListV\r\n                            address={this.props.prolist}\r\n                            votestate={this.props.votestate}\r\n                            votetar={this.props.votetar}\r\n                            votestr={this.props.votestr}\r\n                        />\r\n                    </Card.Meta>\r\n                </Form.Field>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\nclass PersonalTable extends Component{\r\n    constructor(){\r\n        super()\r\n    }\r\n    render(){\r\n        console.log(this.props)\r\n        return(\r\n    <Form>\r\n        <h1 className=\"ui centered\">账户情况</h1>\r\n        <p>当前账户地址：{this.props.myaddress}</p>\r\n        <Form.Field>\r\n            <label>已发起的众筹</label>\r\n            <GetListByidx index={this.props.hostindex} address={this.props.prolist} goallist={this.props.goallist} gotlist={this.props.gotlist}/>\r\n        </Form.Field>\r\n        <Form.Field>\r\n            <label>已参加的众筹</label>\r\n            <GetListByidx index={this.props.paidindex} address={this.props.prolist} goallist={this.props.goallist} gotlist={this.props.gotlist}/>\r\n        </Form.Field>\r\n        <Form.Field>\r\n            <label>发起新众筹</label>\r\n            <input ref='rp_reason' placeholder='reason'>\r\n            </input>\r\n            <input ref='rp_value' placeholder='ether'>\r\n            </input>\r\n            <Button animated='fade' onClick={()=>{this.props.raisepro(this.refs.rp_reason.value, this.refs.rp_value.value)}}>\r\n                <Button.Content>发起新众筹</Button.Content>\r\n            </Button>\r\n        </Form.Field>\r\n        <Form.Field>\r\n            <label>发起新投票</label>\r\n            <input ref='rv_addr' placeholder='project address'>\r\n            </input>\r\n            <input ref='rv_reason' placeholder='reason'>\r\n            </input>\r\n            <input ref='rv_value' placeholder='ether'>\r\n            </input>\r\n            <Button animated='fade' onClick={()=>{this.props.raisevote(this.refs.rv_addr.value, this.refs.rv_reason.value, this.refs.rv_value.value)}}>\r\n                <Button.Content>发起投票</Button.Content>\r\n            </Button>\r\n        </Form.Field>\r\n        <Form.Field>\r\n            <label>参加众筹</label>\r\n            <input ref='pay_addr' placeholder='project address'>\r\n            </input>\r\n            <input ref='pay_value' placeholder='ether'>\r\n            </input>\r\n            <Button animated='fade' onClick={()=>{this.props.payfor(this.refs.pay_addr.value, this.refs.pay_value.value)}}>\r\n                <Button.Content>支付</Button.Content>\r\n            </Button>\r\n        </Form.Field>\r\n        <Form.Field>\r\n            <label>参加投票</label>\r\n            <input ref='vote_addr' placeholder='project address'>\r\n            </input>\r\n            <Button animated='fade' onClick={()=>{this.props.votefor(this.refs.vote_addr.value,1)}}>\r\n                <Button.Content>支持</Button.Content>\r\n            </Button>\r\n            <Button animated='fade' onClick={()=>{this.props.votefor(this.refs.vote_addr.value,2)}}>\r\n                <Button.Content>反对</Button.Content>\r\n            </Button>\r\n        </Form.Field>\r\n    </Form>\r\n)}\r\n}\r\n\r\nexport {GlobalTable, PersonalTable}",{"ruleId":"33","severity":1,"message":"34","line":1,"column":29,"nodeType":"35","messageId":"36","endLine":1,"endColumn":37},{"ruleId":"33","severity":1,"message":"37","line":2,"column":37,"nodeType":"35","messageId":"36","endLine":2,"endColumn":41},{"ruleId":"33","severity":1,"message":"38","line":2,"column":43,"nodeType":"35","messageId":"36","endLine":2,"endColumn":48},{"ruleId":"33","severity":1,"message":"39","line":2,"column":50,"nodeType":"35","messageId":"36","endLine":2,"endColumn":59},{"ruleId":"40","severity":1,"message":"41","line":11,"column":26,"nodeType":"42","messageId":"43","endLine":11,"endColumn":28},{"ruleId":"44","severity":1,"message":"45","line":17,"column":31,"nodeType":"46","messageId":"47","endLine":17,"endColumn":33},{"ruleId":"44","severity":1,"message":"45","line":17,"column":55,"nodeType":"46","messageId":"47","endLine":17,"endColumn":57},{"ruleId":"44","severity":1,"message":"45","line":17,"column":78,"nodeType":"46","messageId":"47","endLine":17,"endColumn":80},{"ruleId":"48","severity":1,"message":"49","line":146,"column":5,"nodeType":"50","messageId":"51","endLine":150,"endColumn":6},{"ruleId":"48","severity":1,"message":"49","line":181,"column":5,"nodeType":"50","messageId":"51","endLine":183,"endColumn":6},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Icon' is defined but never used.","'Image' is defined but never used.","'Statistic' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor"]